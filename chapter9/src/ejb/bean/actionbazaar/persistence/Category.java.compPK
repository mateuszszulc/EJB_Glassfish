package actionbazaar.persistence;

import java.io.Serializable;

import java.sql.Timestamp;


import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.*;

@IdClass(actionbazaar.persistence.CategoryPK.class)
@Entity
@Table(name="CATEGORY")
public class Category implements Serializable {
   private String categoryName;
    private Timestamp createDate;
    private Set<Item> items;
    private User user;
    private Category category;
    private Set<Category> categorySet;

    public Category() {
    }

    @Id
    @Column(name="CATEGORY_NAME")
    public String getCategoryName() {
        return categoryName;
    }

    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }

    @Id
    @Column(name="CREATE_DATE")
    public Timestamp getCreateDate() {
        return createDate;
    }

    public void setCreateDate(Timestamp createDate) {
        this.createDate = createDate;
    }


    @OneToMany(mappedBy="category",cascade=CascadeType.ALL)
    public Set<Item> getItems() {
        return items;
    }

    public void setItems(Set<Item> items) {
        this.items = items;
    }

    public Item addItem(Item item) {
        getItems().add(item);
        item.setCategory(this);
        return item;
    }

    public Item removeItem(Item item) {
        getItems().remove(item);
        item.setCategory(null);
        return item;
    }

    @ManyToOne
    @JoinColumn(name="CREATED_BY", referencedColumnName="USER_ID")
    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    @ManyToOne
    @JoinColumn(name="PARENT_ID", referencedColumnName="CATEGORY_ID")
    public Category getCategory() {
        return category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }

    @OneToMany(mappedBy="category")
    public Set<Category> getCategorySet() {
        return categorySet;
    }

    public void setCategorySet(Set<Category> categorySet) {
        this.categorySet = categorySet;
    }

    public Category addCategory(Category category) {
        getCategorySet().add(category);
        category.setCategory(this);
        return category;
    }

    public Category removeCategory(Category category) {
        getCategorySet().remove(category);
        category.setCategory(null);
        return category;
    }
}
